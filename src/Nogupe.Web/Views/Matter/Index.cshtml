@model PagedListResultViewModel<MatterViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="box-header card-header">
                <form asp-action="index" method="get">
                    <button id="btnCreate" type="button" class="btn btn-success pull-right" onclick="CreateMatter()" data-toggle="modal" data-target="myModal">
                        <i class="fas fa-plus mr-1"></i>
                        Nuevo
                    </button>
                    @*<input id="btnSearch" type="submit" name="btnSearch" class="btn btn-primary float-right pull-right" value="Buscar" />
                    <input id="searchTerm" type="text" name="searchTerm" class="form-control float-right pull-right" style="width:180px;margin-right:10px;" />*@
                </form>
            </div>
            <div class="box-body card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">
                                Nombre
                            </th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id="content">
                        @foreach (var item in Model.Entities)
                        {
                            <tr id="row_@item.Id">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td class="text-center">
                                    <button id="btnEditModal" class="btn btn-sm btn-primary pull-right" onclick="EditMatter(@item.Id)" data-toggle="modal" data-target="editModal">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button id="btnDeleteModal" class="btn btn-sm btn-danger pull-right" onclick="ConfirmDelete(@item.Id)" data-toggle="modal" data-target="deleteModal">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="box-shadow card-footer">
                <nav aria-label="Page Navigation">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.Count; i++)
                        {
                            <li class="@(i == Model.Page ? "page-item active" : "page-item")">
                                <a class="page-link" href="@Url.Action("Index", new {Page = i})">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Modal Create -->
<div class="modal fade" id="createModal" role="dialog" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="createModalBody">

        </div>
    </div>
</div>

<!-- Modal Edit -->
<div class="modal fade" id="editModal" role="dialog" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="editModalBody">

        </div>
    </div>
</div>

<!-- Modal Delete -->
<div class="modal fade" id="deleteModal" role="dialog" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirmar Borrado</h4>
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <div class="modal-body">
                <h5>¿Esta seguro que desea borrar el registro?</h5>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="DeleteMatter()">Borrar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@*hidden field for storing current matterId*@
<input type="hidden" id="hiddenId" />

@section Scripts {

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); };

<script type="text/javascript">

    $(document).ready(function () {

    });

    function CreateMatter() {
        var url = "@Url.Action("Create", "Matter")";
        $.get(url, function (res) {
            $('#createModalBody').html(res);
            $('#createModal').modal('show');
        });
    };

    function EditMatter(id) {
        var url = "@Url.Action("Edit", "Matter")";
        $.get(url, { id: id }, function (res) {
            $('#editModalBody').html(res);
            $('#editModal').modal('show');
        })
    };

    function ConfirmDelete(id) {
        $('#hiddenId').val(id);
        $('#deleteModal').modal('show');
    }

    function CreateFormMatter() {

        var modal = $('#createModal');
        var form = $('form[name="createForm"]');

        form.validate({
            rules: {
                Name: {
                    required: true
                },
                CareerId: {
                    required: true
                },
                YearId: {
                    required: true
                }
            },
            messages: {
                Name: {
                    required: "Requerido",
                },
                CareerId: {
                    required: "Requerido"
                },
                YearId: {
                    required: "Requerido"
                }
            },
            errorElement: 'div',
            wrapper: "div",
            errorPlacement: function (error, element) {
                error.insertAfter(element)
                error.addClass('error-message');  // add a class to the wrapper
                error.css('color', 'red');
            }
        });
        if (!form.valid()) {
            return
        } else {
            var data = form.serialize();
            var url = "@Url.Action("Create","Matter")";
            $.ajax({
                type: "Post",
                url: url,
                data: data,
                success: function (res) {
                    if (res) {
                        var model = res.data;
                        console.log(model)
                        modal.modal('hide');
                        $('#content').append(
                            "<tr id='row_"+model.id+"'><td>" + model.name + "</td><td class='text-center'><button id='btnEditModal' class='btn btn-sm btn-primary pull-right' onclick='EditMatter("+model.id+")'><i class='fas fa-edit'></i></button> <button id='btnDeleteModal' class='btn btn-sm btn-danger pull-right' onclick='ConfirmDelete("+model.id+")'><i class='fas fa-trash'></i></button></td></tr>");

                        $.toast({
                            text: 'Se ha creado un registro',
                            hideAfter: 3000,
                            allowToastClose: true,
                            showHideTransition: 'fade',
                            position: 'bottom-center',
                            icon: 'success'
                        });
                    }
                }
            });
        };
};

    function EditFormMatter() {
        var modal = $('#editModal');
        var form = $('form[name="editForm"]');

        form.validate({
            rules: {
                Name: {
                    required: true
                },
                CareerId: {
                    required: true
                }
            },
            messages: {
                Name: {
                    required: "Requerido.",
                },
                CareerId: {
                    required: "Debe seleccionar una opción."
                }
            },
            errorElement: 'div',
            wrapper: "div",
            errorPlacement: function (error, element) {
                error.insertAfter(element)
                error.addClass('error-message');  // add a class to the wrapper
                error.css('color', 'red');
            }
        });
        if (!form.valid()) {
            return
        } else {
            var data = form.serialize();
            var url = "@Url.Action("Edit","Matter")";
            $.post(url, data, function (res) {
                if (res) {
                    modal.modal('hide');
                    $.toast({
                        text: 'Se ha actualizado un registro',
                        hideAfter: 3000,
                        allowToastClose: true,
                        showHideTransition: 'fade',
                        position: 'bottom-center',
                        icon: 'success'
                    });
                }
            });
        };
    }

    function DeleteMatter() {
        var id = $('#hiddenId').val();
        var url = "@Url.Action("Delete")";
        $.ajax({
            type:"Delete",
            url: url,
            data: { id: id },
            success: function(res) {
                $('#deleteModal').modal('hide');
                $("#row_" + id).remove();
                $.toast({
                    text: 'Se ha eliminado un registro',
                    hideAfter: 3000,
                    allowToastClose: true,
                    showHideTransition: 'fade',
                    position: 'bottom-center',
                    icon: 'error'
                });
            }
        });
    };

</script>
}
